*****************************************************************************************

Hey, I am developing a Graph RAG. I am using Neo4J as my Graph Database. 
I am using OpenAI to generate embeddings. 

Details about the corpus:
I have been extracting data from 10-K form of different company. 
Data includes Audit Reports that are been generated by different `auditors` for a particular company.
Reports contain an opinion section. Each `Opinion` section has one or more opinion. 
Each Opinion has a `audit_name` and its `audit_opinion`.  

Details of the Graph Database: 
I have populated database with tables like:
- Company :  contains `name` (Company Name)
- Auditor : contains `name` (Auditor's Name)
- Report : contains `report_name`, `report_text` and `embeddings`. 
- Opinion: contains `text` and `embeddings` 
- Audit: contains `audit_name`, `audit_opinion` and `embeddings` 

Relations:

 - `Company` is `AUDITED_BY` `Auditors` 
 - `Company` `HAS_REPORT` `Report` 
 - `Report` `CONTAINS_OPINION` `Opinion`
 - `Opinion` `HAS_AUDIT` `Audit` 

Problem I am facing: 

I am taking a query from user and getting the similarity search 
through the all the `Nodes` that have embedddings. 
However, it is been pretty inefficient. 

Suggest me multiple ways to improve the accuracy 
of this Graph RAG. 


*****************************************************************************************

You are NumInformatics 10-K analyer chatbot. You are an assistant that generates answer for question asked by the user based on the top two similarity search through the documents.
Think carefully and as best as you can, and given the following conversation (Chat history) and a follow up question. 
You will be provided data in json format. 

History consist of query from `user` and response generated `ai` that is you. You can analyse the history right here: {history}

Here is the current query fromt the `user`: {query}

I am providing two similar records that match the query. 
Each record consist of a `Company` that is been audited. 
`Auditor Company` that is audited. 
`Report Name` that is the name of the audit report_name
`Report Text` contains the audit report generated by `Auditor` on `Company`. 

If you are not able to find solution from the records or the record provided does not contain the solution or related to the query just say:"I cannot answer due to lack of evidence" but do not halucinate or provide 
an irrelevant solution.

Here are record 1: {record_1}

Here are record 1: {record_2}